# -*- coding: utf-8 -*-
"""q1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UKnOOIQi_GO8dqyGllNHEFnJNpMLlGpM
"""

import numbers

def swap(x, y):
    """
    Task 1
    - Create a function that would swap the value of x and y using only x and y as variables.
    - x and y must be numeric.
    - Return -1 if x and y is not numeric, and
    - print the swapped values if both x and y are numeric.
    """
    # Check if both x and y are numeric using the 'numbers' module
    if not isinstance(x, numbers.Number) or not isinstance(y, numbers.Number):
        return -1

    # Swap the values using addition and subtraction (requires only x and y)
    # The technique relies on arithmetic properties:
    x = x + y # x becomes the sum: x = original_x + original_y
    y = x - y # y = (original_x + original_y) - original_y = x. Now y holds the original value of x
    x = x - y # x = (original_x + original_y) - ((original_x + original_y) - original_y) =(original_x + original_y) - original_x = y. Now y holds the original value of x

    # Print the swapped values
    print(f"Swapped values: x = {x}, y = {y}", "(Swapping performed)")

    # The function is not required to return the swapped values as swapping performed
    return

    # -----------------------------------------------------------------------------
    """
    Task 2
    Invoke the function "swap" using the following scenarios:
    - "Apple", 10
    - 9, 17
    """
print("--- Scenario 1: x = 'Apple', y = 10 ---")
result1 = swap("Apple", 10)
if result1 == -1:
    print("Return value: -1 (Non-numeric input)")

print("\n--- Scenario 2: x = 9, y = 17 ---")
result2 = swap(9, 17)

# Method 2: Using tuple unpacking
import numbers

def swap_if_numeric(x, y):
    # Check if both x and y are numeric using the 'numbers' module
    if not isinstance(x, numbers.Number) or not isinstance(y, numbers.Number):
        print("Return value: -1 (Non-numeric input)")
        return -1  # return statement placed inside the function
    else:
        print(f'\nBefore swapping: x, y = {x},{y}')
        # Pythonic way to swap
        x, y = y, x
        print(f'After swapping: x, y = {x},{y}')


# Invoke the function "swap" using the following scenario 1:
x = "Apple"
y = 10
swap_if_numeric(x, y)

# Invoke the function "swap" using the following scenario 2:
x = 9
y = 17
swap_if_numeric(x, y)

